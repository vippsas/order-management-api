openapi: 3.0.0
info:
  title: order-management-api
  version: '1.0'
  description: Api to add and read additional info for vipps orders
  contact:
    name: Team ecom
    url: 'https://vipps.no/kontakt-oss/bedrift/vipps/'
servers:
  - url: 'https://api.vipps.no/order-management'
    description: vipps order management api
paths:
  '/{version}/orders/{vippsTransactionId}':
    parameters:
      - schema:
          type: string
        name: vippsTransactionId
        in: path
        required: true
      - $ref: '#/components/parameters/version'
    get:
      summary: Get info by vippsTransactionId
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
              examples:
                Retrieve order info:
                  value:
                    category: Ticket
                    orderDetailsUrl: 'https://www.vipps.no'
                    imageIds:
                      - id: laptop_image4433
                        sortOrder: 1
        '404':
          description: Order Not Found
      operationId: getOrder
      description: Retrive the metadata for an order
      parameters: []
      tags:
        - Order
      security:
        - BearerToken: []
    put:
      summary: Add info to vippsTransactionId
      operationId: putOrder
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
            examples:
              Adding order metadata with one image:
                value:
                  category: General
                  orderDetailsUrl: 'https://www.vipps.no'
                  imageIds:
                    - id: laptop_image4433
                      sortOrder: 1
        description: ''
      description: 'Post additional information about an order that will show up on the vipps receipt. '
      parameters: []
      tags:
        - Order
      security:
        - BearerToken: []
  '/{version}/images':
    post:
      summary: Add an image to vipps
      operationId: postImage
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageResponse'
              examples:
                example-1:
                  value:
                    imageId: laptop_image4433
      description: Endpoint for uploading images to Vipps. A imageId will be returned that can be used when adding metadata to Vipps Transactions
      parameters: []
      tags:
        - Image
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Image'
            examples:
              ImageUploadExample:
                value:
                  imageId: laptop_image4433
                  src: iVBORw0KGgoAAAANSUhEUgAAAKsAAADVCAMAAAAfHv
                  type: base64
      security:
        - BearerToken: []
    parameters:
      - $ref: '#/components/parameters/version'
  '/{version}/receipts/{vippsTransactionId}':
    parameters:
      - schema:
          type: string
        name: vippsTransactionId
        in: path
        required: true
      - $ref: '#/components/parameters/version'
    post:
      summary: Store receipt by vippsTransactionId
      operationId: postReceipt
      responses:
        '200':
          description: ''
        '404':
          description: Order not Found
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Receipt'
            examples:
              ReceiptExample:
                value:
                  orderLines:
                    $ref: '#/components/schemas/OrderLine/x-examples/OrderLineExample/value/orderLines'
                  bottomLine:
                    $ref: '#/components/schemas/BottomLine/x-examples/BottomLineExample/value'
      description: Endpoint for uploading receipts to Vipps.
      security:
        - BearerToken: []
      tags:
        - Receipt
    get:
      summary: Get receipt by vippsTransactionId
      operationId: getReceipt
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Receipt'
              examples: {}
      description: Endpoint for downloading receipts to Vipps.
      security:
        - BearerToken: []
      tags:
        - Receipt
components:
  schemas:
    Order:
      type: object
      x-examples:
        example-1:
          value:
            category: general
            orderDetailsUrl: 'https://www.vipps.no'
            image:
              id: laptop_image4433
      description: ''
      properties:
        category:
          $ref: '#/components/schemas/CategoryEnum'
        orderDetailsUrl:
          type: string
          example: 'https://www.vipps.no'
          format: uri
          description: URL linking back to the merchant.
          minLength: 1
        imageId:
          type: string
      required:
        - category
        - orderDetailsUrl
    Image:
      type: object
      properties:
        imageId:
          description: Id of the image to be added
          maxLength: 128
          pattern: '^[0-9A-Za-z-_\.]+$'
          type: string
        src:
          type: string
          description: 'Src of the image, like a base64 encoded string'
        type:
          type: string
          enum:
            - base64
      required:
        - imageId
        - src
        - type
      x-examples:
        example-1:
          value:
            imageId: laptop_image4433
            src: iVBORw0KGgoAAAANSUhEUgAAAKsAAADVCAMAAAAfHv
            type: base64
      title: ''
    ImageResponse:
      type: object
      properties:
        imageId:
          type: string
      x-examples:
        example-1:
          imageId: laptop_image4433
    CategoryEnum:
      type: string
      title: CategoryEnum
      enum:
        - General
        - Receipt
        - OrderConfirmation
        - Delivery
        - Ticket
        - Booking
    Receipt:
      title: Receipt
      type: object
      properties:
        orderLines:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/OrderLine'
        bottomLine:
          $ref: '#/components/schemas/BottomLine'
      required:
        - orderLines
        - bottomLine
    OrderLine:
      title: OrderLine
      type: object
      description: 'All numbers are interpreted as integers with two trailing zeros. ex: 10.00 = 1000'
      properties:
        name:
          type: string
          description: Name of the product in the order line
        id:
          type: string
          description: The product ID
        totalAmount:
          type: integer
          description: 'Total amount of the order line, including tax and discount'
          nullable: true
        totalAmountExcludingTax:
          type: integer
          description: 'Total amount of order line with discount excluding tax '
          nullable: true
        totalTaxAmount:
          type: integer
          description: Total tax amount paid for the order line
          nullable: true
        taxPercentage:
          type: integer
          description: Tax percantage for the order line
          nullable: true
        currency:
          $ref: '#/components/schemas/CurrencyEnum'
        unitInfo:
          $ref: '#/components/schemas/UnitInfo'
        discount:
          type: integer
          description: Total discount for the order line
          nullable: true
        productUrl:
          type: string
          description: Optional URL linking back to the product at the merchant
          nullable: true
      required:
        - name
        - id
        - totalAmount
        - totalAmountExcludingTax
        - totalTaxAmount
        - taxPercentage
        - currency
        - discount
      x-examples:
        OrderLineExample:
          value:
            orderLines:
              - name: Banana
                id: line_item_1
                totalAmount: 1000
                totalAmountExcludingTax: 800
                totalTaxAmount: 200
                taxPercentage: 25
                currency: NOK
                unitInfo:
                  unitPrice: 400
                  quantity: '2.5'
                  quantityUnit: kg
                discount: 0
                productUrl: www.vipps.no/store/banana
              - name: Soap 3for2
                id: line_item_2
                totalAmount: 5000
                totalAmountExcludingTax: 4000
                totalTaxAmount: 1000
                taxPercentage: 25
                currency: NOK
                unitInfo:
                  unitPrice: 2500
                  quantity: '3'
                  quantityUnit: pcs
                discount: 2500
                productUrl: www.vipps.no/store/soap
    BottomLine:
      title: BottomLine
      type: object
      description: 'Summary of the order. Total amount and total '
      properties:
        totalAmount:
          type: integer
          description: 'The total amount the order, including all taxes and discounts'
          nullable: true
        totalTax:
          type: integer
          description: Total tax for the order
          nullable: true
        totalDiscount:
          type: integer
          description: Total discount from the orderLines
          nullable: true
        currency:
          $ref: '#/components/schemas/CurrencyEnum'
        shippingAmount:
          type: integer
          description: Shipping amount for the order
          nullable: true
        tipAmount:
          type: integer
          description: Tip amount for the order
          nullable: true
        giftCardAmount:
          type: integer
          description: Amount paid by gift card or coupon
          nullable: true
        terminalId:
          type: string
      required:
        - totalAmount
        - totalTax
        - currency
      x-examples:
        BottomLineExample:
          value:
            totalAmount: 6000
            totalTax: 1200
            totalDiscount: 2500
            currency: NOK
            shippingAmount: 0
            tipAmount: 0
            giftCardAmount: 0
            terminalId: vipps_pos_122
    UnitInfo:
      title: UnitInfo
      type: object
      description: Optional. If no quantity info is provided the order line will default to 1 pcs
      x-examples:
        example-1:
          value:
            quantity: '0.822'
            unitPrice: 15000
            quantityUnit: kg
        example-2:
          value:
            quantity: '2'
            unitPrice: 20000
            quantityUnit: pcs
      properties:
        unitPrice:
          type: integer
          description: 'Total price per unit, including tax and excluding discount'
          nullable: true
        quantity:
          type: string
          maxLength: 10
          pattern: '^\d+([\.]\d{1,8})?$'
          example: '0.822'
          description: 'Quantity given as a integer or fraction '
        quantityUnit:
          $ref: '#/components/schemas/QuantityUnitEnum'
      required:
        - unitPrice
        - quantity
        - quantityUnit
    CurrencyEnum:
      type: string
      title: CurrencyEnum
      enum:
        - NOK
    QuantityUnitEnum:
      type: string
      title: QuantityUnitEnum
      enum:
        - Minute
        - kg
        - cm
        - pcs
        - Litre
        - Metre
        - Gram
      description: Available units for quantity. Will default to pcs if not set
  securitySchemes:
    BearerToken:
      type: http
      scheme: bearer
  parameters:
    version:
      name: version
      in: path
      required: true
      schema:
        type: string
        enum:
          - v1
      description: The service version number
tags:
  - name: Image
  - name: MobileOrder
  - name: Order
  - name: Receipt
